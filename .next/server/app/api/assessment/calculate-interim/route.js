"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/assessment/calculate-interim/route";
exports.ids = ["app/api/assessment/calculate-interim/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&page=%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fassessment%2Fcalculate-interim%2Froute.ts&appDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&page=%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fassessment%2Fcalculate-interim%2Froute.ts&appDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_am112_OneDrive_Clients_MBTI_src_app_api_assessment_calculate_interim_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/assessment/calculate-interim/route.ts */ \"(rsc)/./src/app/api/assessment/calculate-interim/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/assessment/calculate-interim/route\",\n        pathname: \"/api/assessment/calculate-interim\",\n        filename: \"route\",\n        bundlePath: \"app/api/assessment/calculate-interim/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\am112\\\\OneDrive\\\\سطح المكتب\\\\Clients\\\\MBTI\\\\src\\\\app\\\\api\\\\assessment\\\\calculate-interim\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_am112_OneDrive_Clients_MBTI_src_app_api_assessment_calculate_interim_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/assessment/calculate-interim/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhc3Nlc3NtZW50JTJGY2FsY3VsYXRlLWludGVyaW0lMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFzc2Vzc21lbnQlMkZjYWxjdWxhdGUtaW50ZXJpbSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFzc2Vzc21lbnQlMkZjYWxjdWxhdGUtaW50ZXJpbSUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNhbTExMiU1Q09uZURyaXZlJTVDJUQ4JUIzJUQ4JUI3JUQ4JUFEJTIwJUQ4JUE3JUQ5JTg0JUQ5JTg1JUQ5JTgzJUQ4JUFBJUQ4JUE4JTVDQ2xpZW50cyU1Q01CVEklNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q2FtMTEyJTVDT25lRHJpdmUlNUMlRDglQjMlRDglQjclRDglQUQlMjAlRDglQTclRDklODQlRDklODUlRDklODMlRDglQUElRDglQTglNUNDbGllbnRzJTVDTUJUSSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDNkQ7QUFDMUk7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYnRpLWNvYWNoaW5nLXBsYXRmb3JtLz9jZTgxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXGFtMTEyXFxcXE9uZURyaXZlXFxcXNiz2LfYrSDYp9mE2YXZg9iq2KhcXFxcQ2xpZW50c1xcXFxNQlRJXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXGFzc2Vzc21lbnRcXFxcY2FsY3VsYXRlLWludGVyaW1cXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2Fzc2Vzc21lbnQvY2FsY3VsYXRlLWludGVyaW0vcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hc3Nlc3NtZW50L2NhbGN1bGF0ZS1pbnRlcmltXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9hc3Nlc3NtZW50L2NhbGN1bGF0ZS1pbnRlcmltL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcYW0xMTJcXFxcT25lRHJpdmVcXFxc2LPYt9itINin2YTZhdmD2KrYqFxcXFxDbGllbnRzXFxcXE1CVElcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcYXNzZXNzbWVudFxcXFxjYWxjdWxhdGUtaW50ZXJpbVxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYXNzZXNzbWVudC9jYWxjdWxhdGUtaW50ZXJpbS9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&page=%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fassessment%2Fcalculate-interim%2Froute.ts&appDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/assessment/calculate-interim/route.ts":
/*!***********************************************************!*\
  !*** ./src/app/api/assessment/calculate-interim/route.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_services_MBTICalculatorService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/services/MBTICalculatorService */ \"(rsc)/./src/lib/services/MBTICalculatorService.ts\");\n\n\nasync function POST(request) {\n    const interimApiEnabled = process.env.NEXT_PUBLIC_INTERIM_API_ENABLED !== \"false\";\n    if (!interimApiEnabled) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Interim results temporarily unavailable\",\n            fallback: true,\n            redirect: \"/api/assessment/calculate\"\n        }, {\n            status: 503\n        });\n    }\n    try {\n        const body = await request.json();\n        const { sessionId, responses } = body;\n        if (!sessionId || !responses || !Array.isArray(responses)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid request data. SessionId and responses array required.\"\n            }, {\n                status: 400\n            });\n        }\n        // Filter only core responses and validate count\n        const coreResponses = responses.filter((r)=>r.questionType === \"core\");\n        if (coreResponses.length !== 4) {\n            console.error(`Interim API: Expected 4 core responses, got ${coreResponses.length}. Total responses: ${responses.length}`);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: `Invalid core responses count. Expected 4, got ${coreResponses.length}`,\n                debug: {\n                    totalResponses: responses.length,\n                    coreResponses: coreResponses.length,\n                    responseTypes: responses.map((r)=>r.questionType)\n                }\n            }, {\n                status: 400\n            });\n        }\n        const calculator = _lib_services_MBTICalculatorService__WEBPACK_IMPORTED_MODULE_1__.MBTICalculatorService.getInstance();\n        const interimResult = calculator.calculateInterimResults(coreResponses);\n        const insights = generateInterimInsights(interimResult.mbtiType, interimResult.dimensionScores, body.language || \"en\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            interimResult: {\n                ...interimResult,\n                confidence: Math.min(interimResult.overallConfidence, 65),\n                insights,\n                disclaimer: getDisclaimer(body.language || \"en\")\n            }\n        });\n    } catch (error) {\n        console.error(\"Interim calculation error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to calculate interim results\"\n        }, {\n            status: 500\n        });\n    }\n}\nfunction generateInterimInsights(mbtiType, dimensionScores, language) {\n    const insights = [];\n    const isArabic = language === \"ar\";\n    // Insight based on E/I dimension\n    const eiScore = dimensionScores.find((d)=>d.dimension === \"E/I\");\n    if (eiScore) {\n        if (eiScore.preference === \"E\") {\n            insights.push(isArabic ? \"يبدو أنك تستمد طاقتك من التفاعل مع الآخرين والعالم الخارجي\" : \"You appear to draw energy from interacting with others and the external world\");\n        } else {\n            insights.push(isArabic ? \"يبدو أنك تفضل التفكير الداخلي والتأمل للحصول على الطاقة\" : \"You seem to prefer inner reflection and introspection for energy\");\n        }\n    }\n    // Insight based on S/N dimension\n    const snScore = dimensionScores.find((d)=>d.dimension === \"S/N\");\n    if (snScore) {\n        if (snScore.preference === \"S\") {\n            insights.push(isArabic ? \"تميل إلى التركيز على التفاصيل الملموسة والحقائق الواقعية\" : \"You tend to focus on concrete details and practical realities\");\n        } else {\n            insights.push(isArabic ? \"تميل إلى رؤية الصورة الكبيرة والاحتمالات المستقبلية\" : \"You tend to see the big picture and future possibilities\");\n        }\n    }\n    // Insight based on T/F dimension\n    const tfScore = dimensionScores.find((d)=>d.dimension === \"T/F\");\n    if (tfScore) {\n        if (tfScore.preference === \"T\") {\n            insights.push(isArabic ? \"تفضل اتخاذ القرارات بناءً على المنطق والتحليل الموضوعي\" : \"You prefer making decisions based on logic and objective analysis\");\n        } else {\n            insights.push(isArabic ? \"تأخذ في الاعتبار القيم الشخصية وتأثير القرارات على الآخرين\" : \"You consider personal values and the impact of decisions on others\");\n        }\n    }\n    return insights.slice(0, 3) // Return maximum 3 insights\n    ;\n}\nfunction getDisclaimer(language) {\n    return language === \"ar\" ? \"هذه نتائج أولية بناءً على 4 أسئلة فقط. ستصبح النتائج أكثر دقة بعد إكمال الأسئلة الإضافية.\" : \"These are preliminary results based on only 4 questions. Results will become more accurate after completing additional questions.\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9hc3Nlc3NtZW50L2NhbGN1bGF0ZS1pbnRlcmltL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RDtBQUNxQjtBQUdyRSxlQUFlRSxLQUFLQyxPQUFvQjtJQUM3QyxNQUFNQyxvQkFBb0JDLFFBQVFDLEdBQUcsQ0FBQ0MsK0JBQStCLEtBQUs7SUFFMUUsSUFBSSxDQUFDSCxtQkFBbUI7UUFDdEIsT0FBT0oscURBQVlBLENBQUNRLElBQUksQ0FBQztZQUN2QkMsT0FBTztZQUNQQyxVQUFVO1lBQ1ZDLFVBQVU7UUFDWixHQUFHO1lBQUVDLFFBQVE7UUFBSTtJQUNuQjtJQUVBLElBQUk7UUFDRixNQUFNQyxPQUFPLE1BQU1WLFFBQVFLLElBQUk7UUFDL0IsTUFBTSxFQUFFTSxTQUFTLEVBQUVDLFNBQVMsRUFBRSxHQUFHRjtRQUVqQyxJQUFJLENBQUNDLGFBQWEsQ0FBQ0MsYUFBYSxDQUFDQyxNQUFNQyxPQUFPLENBQUNGLFlBQVk7WUFDekQsT0FBT2YscURBQVlBLENBQUNRLElBQUksQ0FDdEI7Z0JBQUVDLE9BQU87WUFBZ0UsR0FDekU7Z0JBQUVHLFFBQVE7WUFBSTtRQUVsQjtRQUVBLGdEQUFnRDtRQUNoRCxNQUFNTSxnQkFBZ0JILFVBQVVJLE1BQU0sQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUMsWUFBWSxLQUFLO1FBQy9ELElBQUlILGNBQWNJLE1BQU0sS0FBSyxHQUFHO1lBQzlCQyxRQUFRZCxLQUFLLENBQUMsQ0FBQyw0Q0FBNEMsRUFBRVMsY0FBY0ksTUFBTSxDQUFDLG1CQUFtQixFQUFFUCxVQUFVTyxNQUFNLENBQUMsQ0FBQztZQUN6SCxPQUFPdEIscURBQVlBLENBQUNRLElBQUksQ0FDdEI7Z0JBQ0VDLE9BQU8sQ0FBQyw4Q0FBOEMsRUFBRVMsY0FBY0ksTUFBTSxDQUFDLENBQUM7Z0JBQzlFRSxPQUFPO29CQUNMQyxnQkFBZ0JWLFVBQVVPLE1BQU07b0JBQ2hDSixlQUFlQSxjQUFjSSxNQUFNO29CQUNuQ0ksZUFBZVgsVUFBVVksR0FBRyxDQUFDUCxDQUFBQSxJQUFLQSxFQUFFQyxZQUFZO2dCQUNsRDtZQUNGLEdBQ0E7Z0JBQUVULFFBQVE7WUFBSTtRQUVsQjtRQUVBLE1BQU1nQixhQUFhM0Isc0ZBQXFCQSxDQUFDNEIsV0FBVztRQUNwRCxNQUFNQyxnQkFBZ0JGLFdBQVdHLHVCQUF1QixDQUFDYjtRQUV6RCxNQUFNYyxXQUFXQyx3QkFBd0JILGNBQWNJLFFBQVEsRUFBRUosY0FBY0ssZUFBZSxFQUFFdEIsS0FBS3VCLFFBQVEsSUFBSTtRQUVqSCxPQUFPcEMscURBQVlBLENBQUNRLElBQUksQ0FBQztZQUN2QjZCLFNBQVM7WUFDVFAsZUFBZTtnQkFDYixHQUFHQSxhQUFhO2dCQUNoQlEsWUFBWUMsS0FBS0MsR0FBRyxDQUFDVixjQUFjVyxpQkFBaUIsRUFBRTtnQkFDdERUO2dCQUNBVSxZQUFZQyxjQUFjOUIsS0FBS3VCLFFBQVEsSUFBSTtZQUM3QztRQUNGO0lBQ0YsRUFBRSxPQUFPM0IsT0FBTztRQUNkYyxRQUFRZCxLQUFLLENBQUMsOEJBQThCQTtRQUM1QyxPQUFPVCxxREFBWUEsQ0FBQ1EsSUFBSSxDQUN0QjtZQUFFQyxPQUFPO1FBQXNDLEdBQy9DO1lBQUVHLFFBQVE7UUFBSTtJQUVsQjtBQUNGO0FBRUEsU0FBU3FCLHdCQUF3QkMsUUFBZ0IsRUFBRUMsZUFBc0IsRUFBRUMsUUFBZ0I7SUFDekYsTUFBTUosV0FBcUIsRUFBRTtJQUM3QixNQUFNWSxXQUFXUixhQUFhO0lBRTlCLGlDQUFpQztJQUNqQyxNQUFNUyxVQUFVVixnQkFBZ0JXLElBQUksQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUMsU0FBUyxLQUFLO0lBQzFELElBQUlILFNBQVM7UUFDWCxJQUFJQSxRQUFRSSxVQUFVLEtBQUssS0FBSztZQUM5QmpCLFNBQVNrQixJQUFJLENBQ1hOLFdBQ0ksK0RBQ0E7UUFFUixPQUFPO1lBQ0xaLFNBQVNrQixJQUFJLENBQ1hOLFdBQ0ksNERBQ0E7UUFFUjtJQUNGO0lBRUEsaUNBQWlDO0lBQ2pDLE1BQU1PLFVBQVVoQixnQkFBZ0JXLElBQUksQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUMsU0FBUyxLQUFLO0lBQzFELElBQUlHLFNBQVM7UUFDWCxJQUFJQSxRQUFRRixVQUFVLEtBQUssS0FBSztZQUM5QmpCLFNBQVNrQixJQUFJLENBQ1hOLFdBQ0ksNkRBQ0E7UUFFUixPQUFPO1lBQ0xaLFNBQVNrQixJQUFJLENBQ1hOLFdBQ0ksd0RBQ0E7UUFFUjtJQUNGO0lBRUEsaUNBQWlDO0lBQ2pDLE1BQU1RLFVBQVVqQixnQkFBZ0JXLElBQUksQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUMsU0FBUyxLQUFLO0lBQzFELElBQUlJLFNBQVM7UUFDWCxJQUFJQSxRQUFRSCxVQUFVLEtBQUssS0FBSztZQUM5QmpCLFNBQVNrQixJQUFJLENBQ1hOLFdBQ0ksMkRBQ0E7UUFFUixPQUFPO1lBQ0xaLFNBQVNrQixJQUFJLENBQ1hOLFdBQ0ksK0RBQ0E7UUFFUjtJQUNGO0lBRUEsT0FBT1osU0FBU3FCLEtBQUssQ0FBQyxHQUFHLEdBQUcsNEJBQTRCOztBQUMxRDtBQUVBLFNBQVNWLGNBQWNQLFFBQWdCO0lBQ3JDLE9BQU9BLGFBQWEsT0FDaEIsOEZBQ0E7QUFDTiIsInNvdXJjZXMiOlsid2VicGFjazovL21idGktY29hY2hpbmctcGxhdGZvcm0vLi9zcmMvYXBwL2FwaS9hc3Nlc3NtZW50L2NhbGN1bGF0ZS1pbnRlcmltL3JvdXRlLnRzPzE5MTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xyXG5pbXBvcnQgeyBNQlRJQ2FsY3VsYXRvclNlcnZpY2UgfSBmcm9tICdAL2xpYi9zZXJ2aWNlcy9NQlRJQ2FsY3VsYXRvclNlcnZpY2UnXHJcbmltcG9ydCB7IFF1ZXN0aW9uUmVzcG9uc2UsIE1CVElEaW1lbnNpb24gfSBmcm9tICdAL2xpYi90eXBlcydcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgY29uc3QgaW50ZXJpbUFwaUVuYWJsZWQgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19JTlRFUklNX0FQSV9FTkFCTEVEICE9PSAnZmFsc2UnXHJcbiAgXHJcbiAgaWYgKCFpbnRlcmltQXBpRW5hYmxlZCkge1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgZXJyb3I6ICdJbnRlcmltIHJlc3VsdHMgdGVtcG9yYXJpbHkgdW5hdmFpbGFibGUnLFxyXG4gICAgICBmYWxsYmFjazogdHJ1ZSxcclxuICAgICAgcmVkaXJlY3Q6ICcvYXBpL2Fzc2Vzc21lbnQvY2FsY3VsYXRlJ1xyXG4gICAgfSwgeyBzdGF0dXM6IDUwMyB9KVxyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGJvZHkgPSBhd2FpdCByZXF1ZXN0Lmpzb24oKVxyXG4gICAgY29uc3QgeyBzZXNzaW9uSWQsIHJlc3BvbnNlcyB9ID0gYm9keVxyXG5cclxuICAgIGlmICghc2Vzc2lvbklkIHx8ICFyZXNwb25zZXMgfHwgIUFycmF5LmlzQXJyYXkocmVzcG9uc2VzKSkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ0ludmFsaWQgcmVxdWVzdCBkYXRhLiBTZXNzaW9uSWQgYW5kIHJlc3BvbnNlcyBhcnJheSByZXF1aXJlZC4nIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XHJcbiAgICAgIClcclxuICAgIH1cclxuXHJcbiAgICAvLyBGaWx0ZXIgb25seSBjb3JlIHJlc3BvbnNlcyBhbmQgdmFsaWRhdGUgY291bnRcclxuICAgIGNvbnN0IGNvcmVSZXNwb25zZXMgPSByZXNwb25zZXMuZmlsdGVyKHIgPT4gci5xdWVzdGlvblR5cGUgPT09ICdjb3JlJylcclxuICAgIGlmIChjb3JlUmVzcG9uc2VzLmxlbmd0aCAhPT0gNCkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGBJbnRlcmltIEFQSTogRXhwZWN0ZWQgNCBjb3JlIHJlc3BvbnNlcywgZ290ICR7Y29yZVJlc3BvbnNlcy5sZW5ndGh9LiBUb3RhbCByZXNwb25zZXM6ICR7cmVzcG9uc2VzLmxlbmd0aH1gKVxyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBcclxuICAgICAgICAgIGVycm9yOiBgSW52YWxpZCBjb3JlIHJlc3BvbnNlcyBjb3VudC4gRXhwZWN0ZWQgNCwgZ290ICR7Y29yZVJlc3BvbnNlcy5sZW5ndGh9YCxcclxuICAgICAgICAgIGRlYnVnOiB7XHJcbiAgICAgICAgICAgIHRvdGFsUmVzcG9uc2VzOiByZXNwb25zZXMubGVuZ3RoLFxyXG4gICAgICAgICAgICBjb3JlUmVzcG9uc2VzOiBjb3JlUmVzcG9uc2VzLmxlbmd0aCxcclxuICAgICAgICAgICAgcmVzcG9uc2VUeXBlczogcmVzcG9uc2VzLm1hcChyID0+IHIucXVlc3Rpb25UeXBlKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XHJcbiAgICAgIClcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBjYWxjdWxhdG9yID0gTUJUSUNhbGN1bGF0b3JTZXJ2aWNlLmdldEluc3RhbmNlKClcclxuICAgIGNvbnN0IGludGVyaW1SZXN1bHQgPSBjYWxjdWxhdG9yLmNhbGN1bGF0ZUludGVyaW1SZXN1bHRzKGNvcmVSZXNwb25zZXMpXHJcblxyXG4gICAgY29uc3QgaW5zaWdodHMgPSBnZW5lcmF0ZUludGVyaW1JbnNpZ2h0cyhpbnRlcmltUmVzdWx0Lm1idGlUeXBlLCBpbnRlcmltUmVzdWx0LmRpbWVuc2lvblNjb3JlcywgYm9keS5sYW5ndWFnZSB8fCAnZW4nKVxyXG5cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIGludGVyaW1SZXN1bHQ6IHtcclxuICAgICAgICAuLi5pbnRlcmltUmVzdWx0LFxyXG4gICAgICAgIGNvbmZpZGVuY2U6IE1hdGgubWluKGludGVyaW1SZXN1bHQub3ZlcmFsbENvbmZpZGVuY2UsIDY1KSwgLy8gQ2FwIGNvbmZpZGVuY2UgZm9yIGludGVyaW0gcmVzdWx0c1xyXG4gICAgICAgIGluc2lnaHRzLFxyXG4gICAgICAgIGRpc2NsYWltZXI6IGdldERpc2NsYWltZXIoYm9keS5sYW5ndWFnZSB8fCAnZW4nKSxcclxuICAgICAgfVxyXG4gICAgfSlcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignSW50ZXJpbSBjYWxjdWxhdGlvbiBlcnJvcjonLCBlcnJvcilcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgeyBlcnJvcjogJ0ZhaWxlZCB0byBjYWxjdWxhdGUgaW50ZXJpbSByZXN1bHRzJyB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgIClcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdlbmVyYXRlSW50ZXJpbUluc2lnaHRzKG1idGlUeXBlOiBzdHJpbmcsIGRpbWVuc2lvblNjb3JlczogYW55W10sIGxhbmd1YWdlOiBzdHJpbmcpOiBzdHJpbmdbXSB7XHJcbiAgY29uc3QgaW5zaWdodHM6IHN0cmluZ1tdID0gW11cclxuICBjb25zdCBpc0FyYWJpYyA9IGxhbmd1YWdlID09PSAnYXInXHJcblxyXG4gIC8vIEluc2lnaHQgYmFzZWQgb24gRS9JIGRpbWVuc2lvblxyXG4gIGNvbnN0IGVpU2NvcmUgPSBkaW1lbnNpb25TY29yZXMuZmluZChkID0+IGQuZGltZW5zaW9uID09PSAnRS9JJylcclxuICBpZiAoZWlTY29yZSkge1xyXG4gICAgaWYgKGVpU2NvcmUucHJlZmVyZW5jZSA9PT0gJ0UnKSB7XHJcbiAgICAgIGluc2lnaHRzLnB1c2goXHJcbiAgICAgICAgaXNBcmFiaWMgXHJcbiAgICAgICAgICA/ICfZitio2K/ZiCDYo9mG2YMg2KrYs9iq2YXYryDYt9in2YLYqtmDINmF2YYg2KfZhNiq2YHYp9i52YQg2YXYuSDYp9mE2KLYrtix2YrZhiDZiNin2YTYudin2YTZhSDYp9mE2K7Yp9ix2KzZiidcclxuICAgICAgICAgIDogJ1lvdSBhcHBlYXIgdG8gZHJhdyBlbmVyZ3kgZnJvbSBpbnRlcmFjdGluZyB3aXRoIG90aGVycyBhbmQgdGhlIGV4dGVybmFsIHdvcmxkJ1xyXG4gICAgICApXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpbnNpZ2h0cy5wdXNoKFxyXG4gICAgICAgIGlzQXJhYmljXHJcbiAgICAgICAgICA/ICfZitio2K/ZiCDYo9mG2YMg2KrZgdi22YQg2KfZhNiq2YHZg9mK2LEg2KfZhNiv2KfYrtmE2Yog2YjYp9mE2KrYo9mF2YQg2YTZhNit2LXZiNmEINi52YTZiSDYp9mE2LfYp9mC2KknXHJcbiAgICAgICAgICA6ICdZb3Ugc2VlbSB0byBwcmVmZXIgaW5uZXIgcmVmbGVjdGlvbiBhbmQgaW50cm9zcGVjdGlvbiBmb3IgZW5lcmd5J1xyXG4gICAgICApXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBJbnNpZ2h0IGJhc2VkIG9uIFMvTiBkaW1lbnNpb25cclxuICBjb25zdCBzblNjb3JlID0gZGltZW5zaW9uU2NvcmVzLmZpbmQoZCA9PiBkLmRpbWVuc2lvbiA9PT0gJ1MvTicpXHJcbiAgaWYgKHNuU2NvcmUpIHtcclxuICAgIGlmIChzblNjb3JlLnByZWZlcmVuY2UgPT09ICdTJykge1xyXG4gICAgICBpbnNpZ2h0cy5wdXNoKFxyXG4gICAgICAgIGlzQXJhYmljXHJcbiAgICAgICAgICA/ICfYqtmF2YrZhCDYpdmE2Ykg2KfZhNiq2LHZg9mK2LIg2LnZhNmJINin2YTYqtmB2KfYtdmK2YQg2KfZhNmF2YTZhdmI2LPYqSDZiNin2YTYrdmC2KfYptmCINin2YTZiNin2YLYudmK2KknXHJcbiAgICAgICAgICA6ICdZb3UgdGVuZCB0byBmb2N1cyBvbiBjb25jcmV0ZSBkZXRhaWxzIGFuZCBwcmFjdGljYWwgcmVhbGl0aWVzJ1xyXG4gICAgICApXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpbnNpZ2h0cy5wdXNoKFxyXG4gICAgICAgIGlzQXJhYmljXHJcbiAgICAgICAgICA/ICfYqtmF2YrZhCDYpdmE2Ykg2LHYpNmK2Kkg2KfZhNi12YjYsdipINin2YTZg9io2YrYsdipINmI2KfZhNin2K3YqtmF2KfZhNin2Kog2KfZhNmF2LPYqtmC2KjZhNmK2KknXHJcbiAgICAgICAgICA6ICdZb3UgdGVuZCB0byBzZWUgdGhlIGJpZyBwaWN0dXJlIGFuZCBmdXR1cmUgcG9zc2liaWxpdGllcydcclxuICAgICAgKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gSW5zaWdodCBiYXNlZCBvbiBUL0YgZGltZW5zaW9uXHJcbiAgY29uc3QgdGZTY29yZSA9IGRpbWVuc2lvblNjb3Jlcy5maW5kKGQgPT4gZC5kaW1lbnNpb24gPT09ICdUL0YnKVxyXG4gIGlmICh0ZlNjb3JlKSB7XHJcbiAgICBpZiAodGZTY29yZS5wcmVmZXJlbmNlID09PSAnVCcpIHtcclxuICAgICAgaW5zaWdodHMucHVzaChcclxuICAgICAgICBpc0FyYWJpY1xyXG4gICAgICAgICAgPyAn2KrZgdi22YQg2KfYqtiu2KfYsCDYp9mE2YLYsdin2LHYp9iqINio2YbYp9ih2Ysg2LnZhNmJINin2YTZhdmG2LfZgiDZiNin2YTYqtit2YTZitmEINin2YTZhdmI2LbZiNi52YonXHJcbiAgICAgICAgICA6ICdZb3UgcHJlZmVyIG1ha2luZyBkZWNpc2lvbnMgYmFzZWQgb24gbG9naWMgYW5kIG9iamVjdGl2ZSBhbmFseXNpcydcclxuICAgICAgKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaW5zaWdodHMucHVzaChcclxuICAgICAgICBpc0FyYWJpY1xyXG4gICAgICAgICAgPyAn2KrYo9iu2LAg2YHZiiDYp9mE2KfYudiq2KjYp9ixINin2YTZgtmK2YUg2KfZhNi02K7YtdmK2Kkg2YjYqtij2KvZitixINin2YTZgtix2KfYsdin2Kog2LnZhNmJINin2YTYotiu2LHZitmGJ1xyXG4gICAgICAgICAgOiAnWW91IGNvbnNpZGVyIHBlcnNvbmFsIHZhbHVlcyBhbmQgdGhlIGltcGFjdCBvZiBkZWNpc2lvbnMgb24gb3RoZXJzJ1xyXG4gICAgICApXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gaW5zaWdodHMuc2xpY2UoMCwgMykgLy8gUmV0dXJuIG1heGltdW0gMyBpbnNpZ2h0c1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXREaXNjbGFpbWVyKGxhbmd1YWdlOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gIHJldHVybiBsYW5ndWFnZSA9PT0gJ2FyJ1xyXG4gICAgPyAn2YfYsNmHINmG2KrYp9im2Kwg2KPZiNmE2YrYqSDYqNmG2KfYodmLINi52YTZiSA0INij2LPYptmE2Kkg2YHZgti3LiDYs9iq2LXYqNitINin2YTZhtiq2KfYptisINij2YPYq9ixINiv2YLYqSDYqNi52K8g2KXZg9mF2KfZhCDYp9mE2KPYs9im2YTYqSDYp9mE2KXYttin2YHZitipLidcclxuICAgIDogJ1RoZXNlIGFyZSBwcmVsaW1pbmFyeSByZXN1bHRzIGJhc2VkIG9uIG9ubHkgNCBxdWVzdGlvbnMuIFJlc3VsdHMgd2lsbCBiZWNvbWUgbW9yZSBhY2N1cmF0ZSBhZnRlciBjb21wbGV0aW5nIGFkZGl0aW9uYWwgcXVlc3Rpb25zLidcclxufSJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJNQlRJQ2FsY3VsYXRvclNlcnZpY2UiLCJQT1NUIiwicmVxdWVzdCIsImludGVyaW1BcGlFbmFibGVkIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0lOVEVSSU1fQVBJX0VOQUJMRUQiLCJqc29uIiwiZXJyb3IiLCJmYWxsYmFjayIsInJlZGlyZWN0Iiwic3RhdHVzIiwiYm9keSIsInNlc3Npb25JZCIsInJlc3BvbnNlcyIsIkFycmF5IiwiaXNBcnJheSIsImNvcmVSZXNwb25zZXMiLCJmaWx0ZXIiLCJyIiwicXVlc3Rpb25UeXBlIiwibGVuZ3RoIiwiY29uc29sZSIsImRlYnVnIiwidG90YWxSZXNwb25zZXMiLCJyZXNwb25zZVR5cGVzIiwibWFwIiwiY2FsY3VsYXRvciIsImdldEluc3RhbmNlIiwiaW50ZXJpbVJlc3VsdCIsImNhbGN1bGF0ZUludGVyaW1SZXN1bHRzIiwiaW5zaWdodHMiLCJnZW5lcmF0ZUludGVyaW1JbnNpZ2h0cyIsIm1idGlUeXBlIiwiZGltZW5zaW9uU2NvcmVzIiwibGFuZ3VhZ2UiLCJzdWNjZXNzIiwiY29uZmlkZW5jZSIsIk1hdGgiLCJtaW4iLCJvdmVyYWxsQ29uZmlkZW5jZSIsImRpc2NsYWltZXIiLCJnZXREaXNjbGFpbWVyIiwiaXNBcmFiaWMiLCJlaVNjb3JlIiwiZmluZCIsImQiLCJkaW1lbnNpb24iLCJwcmVmZXJlbmNlIiwicHVzaCIsInNuU2NvcmUiLCJ0ZlNjb3JlIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/assessment/calculate-interim/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/services/MBTICalculatorService.ts":
/*!***************************************************!*\
  !*** ./src/lib/services/MBTICalculatorService.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MBTICalculatorService: () => (/* binding */ MBTICalculatorService)\n/* harmony export */ });\nclass MBTICalculatorService {\n    constructor(){}\n    static getInstance() {\n        if (!MBTICalculatorService.instance) {\n            MBTICalculatorService.instance = new MBTICalculatorService();\n        }\n        return MBTICalculatorService.instance;\n    }\n    calculateMBTI(input) {\n        const { sessionId, responses, methodology, isInterim = false } = input;\n        const dimensionScores = this.calculateDimensionScores(responses, methodology);\n        const mbtiType = this.determineMBTIType(dimensionScores);\n        const overallConfidence = this.calculateOverallConfidence(dimensionScores);\n        return {\n            sessionId,\n            mbtiType,\n            dimensionScores,\n            overallConfidence,\n            methodology,\n            isInterim,\n            totalResponses: responses.length\n        };\n    }\n    calculateDimensionScores(responses, methodology) {\n        const dimensions = [\n            \"E/I\",\n            \"S/N\",\n            \"T/F\",\n            \"J/P\"\n        ];\n        const scores = [];\n        for (const dimension of dimensions){\n            const dimensionResponses = responses.filter((r)=>r.mbtiDimension === dimension);\n            let rawScoreA = 0;\n            let rawScoreB = 0;\n            for (const response of dimensionResponses){\n                if (methodology === \"sais\" && response.responseType === \"distribution\") {\n                    // For SAIS, we need to consider the tendency mapping\n                    // The distribution points represent strength of preference\n                    const pointsA = response.distributionA || 0;\n                    const pointsB = response.distributionB || 0;\n                    rawScoreA += pointsA;\n                    rawScoreB += pointsB;\n                } else if (response.responseType === \"binary\") {\n                    if (response.selectedOption === \"A\") {\n                        rawScoreA += 1;\n                    } else if (response.selectedOption === \"B\") {\n                        rawScoreB += 1;\n                    }\n                }\n            }\n            const preference = this.determinePreference(dimension, rawScoreA, rawScoreB, dimensionResponses);\n            const confidence = this.calculateConfidence(rawScoreA, rawScoreB, methodology);\n            scores.push({\n                dimension,\n                rawScoreA,\n                rawScoreB,\n                preference,\n                confidence\n            });\n        }\n        return scores;\n    }\n    determinePreference(dimension, scoreA, scoreB, dimensionResponses) {\n        // For SAIS, we need to check the tendency mapping from the responses\n        if (dimensionResponses && dimensionResponses.length > 0) {\n            const saisResponse = dimensionResponses.find((r)=>r.responseType === \"distribution\");\n            if (saisResponse && saisResponse.tendency) {\n                // If we have SAIS responses, use the tendency directly from the response\n                // which was determined based on the question's optionATendency/optionBTendency\n                const tendencyCounts = {};\n                for (const response of dimensionResponses){\n                    if (response.tendency) {\n                        if (!tendencyCounts[response.tendency]) {\n                            tendencyCounts[response.tendency] = 0;\n                        }\n                        // Weight by distribution points for SAIS\n                        if (response.responseType === \"distribution\") {\n                            const weight = response.selectedOption === \"A\" ? response.distributionA || 0 : response.distributionB || 0;\n                            tendencyCounts[response.tendency] += weight;\n                        } else {\n                            tendencyCounts[response.tendency] += 1;\n                        }\n                    }\n                }\n                // Return the tendency with the highest count\n                const preferences = Object.entries(tendencyCounts);\n                if (preferences.length > 0) {\n                    preferences.sort((a, b)=>b[1] - a[1]);\n                    return preferences[0][0];\n                }\n            }\n        }\n        // Fallback to standard mapping for non-SAIS or if tendencies not found\n        const dimensionMap = {\n            \"E/I\": {\n                A: \"E\",\n                B: \"I\"\n            },\n            \"S/N\": {\n                A: \"S\",\n                B: \"N\"\n            },\n            \"T/F\": {\n                A: \"T\",\n                B: \"F\"\n            },\n            \"J/P\": {\n                A: \"J\",\n                B: \"P\"\n            }\n        };\n        return scoreA > scoreB ? dimensionMap[dimension].A : dimensionMap[dimension].B;\n    }\n    calculateConfidence(scoreA, scoreB, methodology) {\n        const total = scoreA + scoreB;\n        if (total === 0) return 50;\n        const higher = Math.max(scoreA, scoreB);\n        let confidence = higher / total * 100;\n        // For SAIS methodology, apply a different confidence scale\n        // since the 5-point distribution allows for more nuanced responses\n        if (methodology === \"sais\") {\n            // SAIS confidence scale:\n            // 5-0 distribution = 100% confidence\n            // 4-1 distribution = 80% confidence  \n            // 3-2 distribution = 60% confidence\n            const difference = Math.abs(scoreA - scoreB);\n            const maxPossibleDifference = total;\n            if (maxPossibleDifference > 0) {\n                // Scale confidence based on the strength of the preference\n                confidence = 50 + difference / maxPossibleDifference * 50;\n            }\n        }\n        return Math.round(confidence);\n    }\n    determineMBTIType(dimensionScores) {\n        const typeString = dimensionScores.map((score)=>score.preference).join(\"\");\n        return typeString;\n    }\n    calculateOverallConfidence(dimensionScores) {\n        const totalConfidence = dimensionScores.reduce((sum, score)=>sum + score.confidence, 0);\n        return Math.round(totalConfidence / dimensionScores.length);\n    }\n    calculateInterimResults(responses) {\n        const dimensionOrder = [\n            \"E/I\",\n            \"S/N\",\n            \"T/F\",\n            \"J/P\"\n        ];\n        const interimResponses = [];\n        for(let i = 0; i < Math.min(4, responses.length); i++){\n            const response = responses[i];\n            if (!response.mbtiDimension && i < dimensionOrder.length) {\n                response.mbtiDimension = dimensionOrder[i];\n            }\n            interimResponses.push(response);\n        }\n        return this.calculateMBTI({\n            sessionId: responses[0]?.sessionId || \"\",\n            responses: interimResponses,\n            methodology: \"scenarios\",\n            isInterim: true\n        });\n    }\n    isSAISScoreValid(distributionA, distributionB) {\n        const validCombinations = [\n            [\n                5,\n                0\n            ],\n            [\n                4,\n                1\n            ],\n            [\n                3,\n                2\n            ],\n            [\n                2,\n                3\n            ],\n            [\n                1,\n                4\n            ],\n            [\n                0,\n                5\n            ]\n        ];\n        return validCombinations.some(([a, b])=>distributionA === a && distributionB === b);\n    }\n    validateSAISDistribution(pointA, pointB) {\n        return pointA >= 0 && pointA <= 5 && pointB >= 0 && pointB <= 5 && pointA + pointB === 5 && Number.isInteger(pointA) && Number.isInteger(pointB);\n    }\n    // Test method for SAIS scoring verification\n    testSAISScoring(responses) {\n        console.log(\"SAIS Scoring Test:\");\n        console.log(\"==================\");\n        const result = this.calculateMBTI({\n            sessionId: \"test-session\",\n            responses,\n            methodology: \"sais\",\n            isInterim: false\n        });\n        console.log(\"MBTI Type:\", result.mbtiType);\n        console.log(\"Overall Confidence:\", result.overallConfidence + \"%\");\n        console.log(\"\\nDimension Breakdown:\");\n        result.dimensionScores.forEach((score)=>{\n            console.log(`${score.dimension}: ${score.preference} (${score.confidence}% confidence)`);\n            console.log(`  Raw scores: A=${score.rawScoreA}, B=${score.rawScoreB}`);\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3NlcnZpY2VzL01CVElDYWxjdWxhdG9yU2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBVU8sTUFBTUE7SUFHWCxhQUFzQixDQUFDO0lBRXZCLE9BQWNDLGNBQXFDO1FBQ2pELElBQUksQ0FBQ0Qsc0JBQXNCRSxRQUFRLEVBQUU7WUFDbkNGLHNCQUFzQkUsUUFBUSxHQUFHLElBQUlGO1FBQ3ZDO1FBQ0EsT0FBT0Esc0JBQXNCRSxRQUFRO0lBQ3ZDO0lBRU9DLGNBQWNDLEtBQW1CLEVBQWlCO1FBQ3ZELE1BQU0sRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQUVDLFdBQVcsRUFBRUMsWUFBWSxLQUFLLEVBQUUsR0FBR0o7UUFFakUsTUFBTUssa0JBQWtCLElBQUksQ0FBQ0Msd0JBQXdCLENBQUNKLFdBQVdDO1FBQ2pFLE1BQU1JLFdBQVcsSUFBSSxDQUFDQyxpQkFBaUIsQ0FBQ0g7UUFDeEMsTUFBTUksb0JBQW9CLElBQUksQ0FBQ0MsMEJBQTBCLENBQUNMO1FBRTFELE9BQU87WUFDTEo7WUFDQU07WUFDQUY7WUFDQUk7WUFDQU47WUFDQUM7WUFDQU8sZ0JBQWdCVCxVQUFVVSxNQUFNO1FBQ2xDO0lBQ0Y7SUFFUU4seUJBQ05KLFNBQTZCLEVBQzdCQyxXQUE0QixFQUNWO1FBQ2xCLE1BQU1VLGFBQThCO1lBQUM7WUFBTztZQUFPO1lBQU87U0FBTTtRQUNoRSxNQUFNQyxTQUEyQixFQUFFO1FBRW5DLEtBQUssTUFBTUMsYUFBYUYsV0FBWTtZQUNsQyxNQUFNRyxxQkFBcUJkLFVBQVVlLE1BQU0sQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUMsYUFBYSxLQUFLSjtZQUVyRSxJQUFJSyxZQUFZO1lBQ2hCLElBQUlDLFlBQVk7WUFFaEIsS0FBSyxNQUFNQyxZQUFZTixtQkFBb0I7Z0JBQ3pDLElBQUliLGdCQUFnQixVQUFVbUIsU0FBU0MsWUFBWSxLQUFLLGdCQUFnQjtvQkFDdEUscURBQXFEO29CQUNyRCwyREFBMkQ7b0JBQzNELE1BQU1DLFVB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Q0FBQzZFLE9BQU8sQ0FBQ3RCLENBQUFBO1lBQzdCbUIsUUFBUUMsR0FBRyxDQUFDLENBQUMsRUFBRXBCLE1BQU03QyxTQUFTLENBQUMsRUFBRSxFQUFFNkMsTUFBTS9CLFVBQVUsQ0FBQyxFQUFFLEVBQUUrQixNQUFNN0IsVUFBVSxDQUFDLGFBQWEsQ0FBQztZQUN2RmdELFFBQVFDLEdBQUcsQ0FBQyxDQUFDLGdCQUFnQixFQUFFcEIsTUFBTXhDLFNBQVMsQ0FBQyxJQUFJLEVBQUV3QyxNQUFNdkMsU0FBUyxDQUFDLENBQUM7UUFDeEU7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWJ0aS1jb2FjaGluZy1wbGF0Zm9ybS8uL3NyYy9saWIvc2VydmljZXMvTUJUSUNhbGN1bGF0b3JTZXJ2aWNlLnRzPzIyYjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBRdWVzdGlvblJlc3BvbnNlLFxyXG4gIE1CVElUeXBlLFxyXG4gIE1CVElEaW1lbnNpb24sXHJcbiAgU2NvcmluZ0lucHV0LFxyXG4gIFNjb3JpbmdSZXN1bHQsXHJcbiAgRGltZW5zaW9uU2NvcmUsXHJcbiAgTWV0aG9kb2xvZ3lUeXBlLFxyXG59IGZyb20gJ0AvbGliL3R5cGVzJ1xyXG5cclxuZXhwb3J0IGNsYXNzIE1CVElDYWxjdWxhdG9yU2VydmljZSB7XHJcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IE1CVElDYWxjdWxhdG9yU2VydmljZVxyXG5cclxuICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge31cclxuXHJcbiAgcHVibGljIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBNQlRJQ2FsY3VsYXRvclNlcnZpY2Uge1xyXG4gICAgaWYgKCFNQlRJQ2FsY3VsYXRvclNlcnZpY2UuaW5zdGFuY2UpIHtcclxuICAgICAgTUJUSUNhbGN1bGF0b3JTZXJ2aWNlLmluc3RhbmNlID0gbmV3IE1CVElDYWxjdWxhdG9yU2VydmljZSgpXHJcbiAgICB9XHJcbiAgICByZXR1cm4gTUJUSUNhbGN1bGF0b3JTZXJ2aWNlLmluc3RhbmNlXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY2FsY3VsYXRlTUJUSShpbnB1dDogU2NvcmluZ0lucHV0KTogU2NvcmluZ1Jlc3VsdCB7XHJcbiAgICBjb25zdCB7IHNlc3Npb25JZCwgcmVzcG9uc2VzLCBtZXRob2RvbG9neSwgaXNJbnRlcmltID0gZmFsc2UgfSA9IGlucHV0XHJcblxyXG4gICAgY29uc3QgZGltZW5zaW9uU2NvcmVzID0gdGhpcy5jYWxjdWxhdGVEaW1lbnNpb25TY29yZXMocmVzcG9uc2VzLCBtZXRob2RvbG9neSlcclxuICAgIGNvbnN0IG1idGlUeXBlID0gdGhpcy5kZXRlcm1pbmVNQlRJVHlwZShkaW1lbnNpb25TY29yZXMpXHJcbiAgICBjb25zdCBvdmVyYWxsQ29uZmlkZW5jZSA9IHRoaXMuY2FsY3VsYXRlT3ZlcmFsbENvbmZpZGVuY2UoZGltZW5zaW9uU2NvcmVzKVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHNlc3Npb25JZCxcclxuICAgICAgbWJ0aVR5cGUsXHJcbiAgICAgIGRpbWVuc2lvblNjb3JlcyxcclxuICAgICAgb3ZlcmFsbENvbmZpZGVuY2UsXHJcbiAgICAgIG1ldGhvZG9sb2d5LFxyXG4gICAgICBpc0ludGVyaW0sXHJcbiAgICAgIHRvdGFsUmVzcG9uc2VzOiByZXNwb25zZXMubGVuZ3RoLFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBjYWxjdWxhdGVEaW1lbnNpb25TY29yZXMoXHJcbiAgICByZXNwb25zZXM6IFF1ZXN0aW9uUmVzcG9uc2VbXSxcclxuICAgIG1ldGhvZG9sb2d5OiBNZXRob2RvbG9neVR5cGVcclxuICApOiBEaW1lbnNpb25TY29yZVtdIHtcclxuICAgIGNvbnN0IGRpbWVuc2lvbnM6IE1CVElEaW1lbnNpb25bXSA9IFsnRS9JJywgJ1MvTicsICdUL0YnLCAnSi9QJ11cclxuICAgIGNvbnN0IHNjb3JlczogRGltZW5zaW9uU2NvcmVbXSA9IFtdXHJcblxyXG4gICAgZm9yIChjb25zdCBkaW1lbnNpb24gb2YgZGltZW5zaW9ucykge1xyXG4gICAgICBjb25zdCBkaW1lbnNpb25SZXNwb25zZXMgPSByZXNwb25zZXMuZmlsdGVyKHIgPT4gci5tYnRpRGltZW5zaW9uID09PSBkaW1lbnNpb24pXHJcbiAgICAgIFxyXG4gICAgICBsZXQgcmF3U2NvcmVBID0gMFxyXG4gICAgICBsZXQgcmF3U2NvcmVCID0gMFxyXG5cclxuICAgICAgZm9yIChjb25zdCByZXNwb25zZSBvZiBkaW1lbnNpb25SZXNwb25zZXMpIHtcclxuICAgICAgICBpZiAobWV0aG9kb2xvZ3kgPT09ICdzYWlzJyAmJiByZXNwb25zZS5yZXNwb25zZVR5cGUgPT09ICdkaXN0cmlidXRpb24nKSB7XHJcbiAgICAgICAgICAvLyBGb3IgU0FJUywgd2UgbmVlZCB0byBjb25zaWRlciB0aGUgdGVuZGVuY3kgbWFwcGluZ1xyXG4gICAgICAgICAgLy8gVGhlIGRpc3RyaWJ1dGlvbiBwb2ludHMgcmVwcmVzZW50IHN0cmVuZ3RoIG9mIHByZWZlcmVuY2VcclxuICAgICAgICAgIGNvbnN0IHBvaW50c0EgPSByZXNwb25zZS5kaXN0cmlidXRpb25BIHx8IDBcclxuICAgICAgICAgIGNvbnN0IHBvaW50c0IgPSByZXNwb25zZS5kaXN0cmlidXRpb25CIHx8IDBcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgcmF3U2NvcmVBICs9IHBvaW50c0FcclxuICAgICAgICAgIHJhd1Njb3JlQiArPSBwb2ludHNCXHJcbiAgICAgICAgfSBlbHNlIGlmIChyZXNwb25zZS5yZXNwb25zZVR5cGUgPT09ICdiaW5hcnknKSB7XHJcbiAgICAgICAgICBpZiAocmVzcG9uc2Uuc2VsZWN0ZWRPcHRpb24gPT09ICdBJykge1xyXG4gICAgICAgICAgICByYXdTY29yZUEgKz0gMVxyXG4gICAgICAgICAgfSBlbHNlIGlmIChyZXNwb25zZS5zZWxlY3RlZE9wdGlvbiA9PT0gJ0InKSB7XHJcbiAgICAgICAgICAgIHJhd1Njb3JlQiArPSAxXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBwcmVmZXJlbmNlID0gdGhpcy5kZXRlcm1pbmVQcmVmZXJlbmNlKGRpbWVuc2lvbiwgcmF3U2NvcmVBLCByYXdTY29yZUIsIGRpbWVuc2lvblJlc3BvbnNlcylcclxuICAgICAgY29uc3QgY29uZmlkZW5jZSA9IHRoaXMuY2FsY3VsYXRlQ29uZmlkZW5jZShyYXdTY29yZUEsIHJhd1Njb3JlQiwgbWV0aG9kb2xvZ3kpXHJcblxyXG4gICAgICBzY29yZXMucHVzaCh7XHJcbiAgICAgICAgZGltZW5zaW9uLFxyXG4gICAgICAgIHJhd1Njb3JlQSxcclxuICAgICAgICByYXdTY29yZUIsXHJcbiAgICAgICAgcHJlZmVyZW5jZSxcclxuICAgICAgICBjb25maWRlbmNlLFxyXG4gICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBzY29yZXNcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZGV0ZXJtaW5lUHJlZmVyZW5jZShcclxuICAgIGRpbWVuc2lvbjogTUJUSURpbWVuc2lvbixcclxuICAgIHNjb3JlQTogbnVtYmVyLFxyXG4gICAgc2NvcmVCOiBudW1iZXIsXHJcbiAgICBkaW1lbnNpb25SZXNwb25zZXM/OiBRdWVzdGlvblJlc3BvbnNlW11cclxuICApOiBzdHJpbmcge1xyXG4gICAgLy8gRm9yIFNBSVMsIHdlIG5lZWQgdG8gY2hlY2sgdGhlIHRlbmRlbmN5IG1hcHBpbmcgZnJvbSB0aGUgcmVzcG9uc2VzXHJcbiAgICBpZiAoZGltZW5zaW9uUmVzcG9uc2VzICYmIGRpbWVuc2lvblJlc3BvbnNlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGNvbnN0IHNhaXNSZXNwb25zZSA9IGRpbWVuc2lvblJlc3BvbnNlcy5maW5kKHIgPT4gci5yZXNwb25zZVR5cGUgPT09ICdkaXN0cmlidXRpb24nKVxyXG4gICAgICBpZiAoc2Fpc1Jlc3BvbnNlICYmIHNhaXNSZXNwb25zZS50ZW5kZW5jeSkge1xyXG4gICAgICAgIC8vIElmIHdlIGhhdmUgU0FJUyByZXNwb25zZXMsIHVzZSB0aGUgdGVuZGVuY3kgZGlyZWN0bHkgZnJvbSB0aGUgcmVzcG9uc2VcclxuICAgICAgICAvLyB3aGljaCB3YXMgZGV0ZXJtaW5lZCBiYXNlZCBvbiB0aGUgcXVlc3Rpb24ncyBvcHRpb25BVGVuZGVuY3kvb3B0aW9uQlRlbmRlbmN5XHJcbiAgICAgICAgY29uc3QgdGVuZGVuY3lDb3VudHM6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4gPSB7fVxyXG4gICAgICAgIFxyXG4gICAgICAgIGZvciAoY29uc3QgcmVzcG9uc2Ugb2YgZGltZW5zaW9uUmVzcG9uc2VzKSB7XHJcbiAgICAgICAgICBpZiAocmVzcG9uc2UudGVuZGVuY3kpIHtcclxuICAgICAgICAgICAgaWYgKCF0ZW5kZW5jeUNvdW50c1tyZXNwb25zZS50ZW5kZW5jeV0pIHtcclxuICAgICAgICAgICAgICB0ZW5kZW5jeUNvdW50c1tyZXNwb25zZS50ZW5kZW5jeV0gPSAwXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gV2VpZ2h0IGJ5IGRpc3RyaWJ1dGlvbiBwb2ludHMgZm9yIFNBSVNcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnJlc3BvbnNlVHlwZSA9PT0gJ2Rpc3RyaWJ1dGlvbicpIHtcclxuICAgICAgICAgICAgICBjb25zdCB3ZWlnaHQgPSByZXNwb25zZS5zZWxlY3RlZE9wdGlvbiA9PT0gJ0EnIFxyXG4gICAgICAgICAgICAgICAgPyByZXNwb25zZS5kaXN0cmlidXRpb25BIHx8IDAgXHJcbiAgICAgICAgICAgICAgICA6IHJlc3BvbnNlLmRpc3RyaWJ1dGlvbkIgfHwgMFxyXG4gICAgICAgICAgICAgIHRlbmRlbmN5Q291bnRzW3Jlc3BvbnNlLnRlbmRlbmN5XSArPSB3ZWlnaHRcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICB0ZW5kZW5jeUNvdW50c1tyZXNwb25zZS50ZW5kZW5jeV0gKz0gMVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIFJldHVybiB0aGUgdGVuZGVuY3kgd2l0aCB0aGUgaGlnaGVzdCBjb3VudFxyXG4gICAgICAgIGNvbnN0IHByZWZlcmVuY2VzID0gT2JqZWN0LmVudHJpZXModGVuZGVuY3lDb3VudHMpXHJcbiAgICAgICAgaWYgKHByZWZlcmVuY2VzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgIHByZWZlcmVuY2VzLnNvcnQoKGEsIGIpID0+IGJbMV0gLSBhWzFdKVxyXG4gICAgICAgICAgcmV0dXJuIHByZWZlcmVuY2VzWzBdWzBdXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIEZhbGxiYWNrIHRvIHN0YW5kYXJkIG1hcHBpbmcgZm9yIG5vbi1TQUlTIG9yIGlmIHRlbmRlbmNpZXMgbm90IGZvdW5kXHJcbiAgICBjb25zdCBkaW1lbnNpb25NYXA6IFJlY29yZDxNQlRJRGltZW5zaW9uLCB7IEE6IHN0cmluZzsgQjogc3RyaW5nIH0+ID0ge1xyXG4gICAgICAnRS9JJzogeyBBOiAnRScsIEI6ICdJJyB9LFxyXG4gICAgICAnUy9OJzogeyBBOiAnUycsIEI6ICdOJyB9LFxyXG4gICAgICAnVC9GJzogeyBBOiAnVCcsIEI6ICdGJyB9LFxyXG4gICAgICAnSi9QJzogeyBBOiAnSicsIEI6ICdQJyB9LFxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBzY29yZUEgPiBzY29yZUIgPyBkaW1lbnNpb25NYXBbZGltZW5zaW9uXS5BIDogZGltZW5zaW9uTWFwW2RpbWVuc2lvbl0uQlxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBjYWxjdWxhdGVDb25maWRlbmNlKHNjb3JlQTogbnVtYmVyLCBzY29yZUI6IG51bWJlciwgbWV0aG9kb2xvZ3k/OiBNZXRob2RvbG9neVR5cGUpOiBudW1iZXIge1xyXG4gICAgY29uc3QgdG90YWwgPSBzY29yZUEgKyBzY29yZUJcclxuICAgIGlmICh0b3RhbCA9PT0gMCkgcmV0dXJuIDUwXHJcblxyXG4gICAgY29uc3QgaGlnaGVyID0gTWF0aC5tYXgoc2NvcmVBLCBzY29yZUIpXHJcbiAgICBsZXQgY29uZmlkZW5jZSA9IChoaWdoZXIgLyB0b3RhbCkgKiAxMDBcclxuICAgIFxyXG4gICAgLy8gRm9yIFNBSVMgbWV0aG9kb2xvZ3ksIGFwcGx5IGEgZGlmZmVyZW50IGNvbmZpZGVuY2Ugc2NhbGVcclxuICAgIC8vIHNpbmNlIHRoZSA1LXBvaW50IGRpc3RyaWJ1dGlvbiBhbGxvd3MgZm9yIG1vcmUgbnVhbmNlZCByZXNwb25zZXNcclxuICAgIGlmIChtZXRob2RvbG9neSA9PT0gJ3NhaXMnKSB7XHJcbiAgICAgIC8vIFNBSVMgY29uZmlkZW5jZSBzY2FsZTpcclxuICAgICAgLy8gNS0wIGRpc3RyaWJ1dGlvbiA9IDEwMCUgY29uZmlkZW5jZVxyXG4gICAgICAvLyA0LTEgZGlzdHJpYnV0aW9uID0gODAlIGNvbmZpZGVuY2UgIFxyXG4gICAgICAvLyAzLTIgZGlzdHJpYnV0aW9uID0gNjAlIGNvbmZpZGVuY2VcclxuICAgICAgY29uc3QgZGlmZmVyZW5jZSA9IE1hdGguYWJzKHNjb3JlQSAtIHNjb3JlQilcclxuICAgICAgY29uc3QgbWF4UG9zc2libGVEaWZmZXJlbmNlID0gdG90YWxcclxuICAgICAgXHJcbiAgICAgIGlmIChtYXhQb3NzaWJsZURpZmZlcmVuY2UgPiAwKSB7XHJcbiAgICAgICAgLy8gU2NhbGUgY29uZmlkZW5jZSBiYXNlZCBvbiB0aGUgc3RyZW5ndGggb2YgdGhlIHByZWZlcmVuY2VcclxuICAgICAgICBjb25maWRlbmNlID0gNTAgKyAoZGlmZmVyZW5jZSAvIG1heFBvc3NpYmxlRGlmZmVyZW5jZSkgKiA1MFxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHJldHVybiBNYXRoLnJvdW5kKGNvbmZpZGVuY2UpXHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGRldGVybWluZU1CVElUeXBlKGRpbWVuc2lvblNjb3JlczogRGltZW5zaW9uU2NvcmVbXSk6IE1CVElUeXBlIHtcclxuICAgIGNvbnN0IHR5cGVTdHJpbmcgPSBkaW1lbnNpb25TY29yZXNcclxuICAgICAgLm1hcChzY29yZSA9PiBzY29yZS5wcmVmZXJlbmNlKVxyXG4gICAgICAuam9pbignJylcclxuICAgIFxyXG4gICAgcmV0dXJuIHR5cGVTdHJpbmcgYXMgTUJUSVR5cGVcclxuICB9XHJcblxyXG4gIHByaXZhdGUgY2FsY3VsYXRlT3ZlcmFsbENvbmZpZGVuY2UoZGltZW5zaW9uU2NvcmVzOiBEaW1lbnNpb25TY29yZVtdKTogbnVtYmVyIHtcclxuICAgIGNvbnN0IHRvdGFsQ29uZmlkZW5jZSA9IGRpbWVuc2lvblNjb3Jlcy5yZWR1Y2UoXHJcbiAgICAgIChzdW0sIHNjb3JlKSA9PiBzdW0gKyBzY29yZS5jb25maWRlbmNlLFxyXG4gICAgICAwXHJcbiAgICApXHJcbiAgICBcclxuICAgIHJldHVybiBNYXRoLnJvdW5kKHRvdGFsQ29uZmlkZW5jZSAvIGRpbWVuc2lvblNjb3Jlcy5sZW5ndGgpXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY2FsY3VsYXRlSW50ZXJpbVJlc3VsdHMocmVzcG9uc2VzOiBRdWVzdGlvblJlc3BvbnNlW10pOiBTY29yaW5nUmVzdWx0IHtcclxuICAgIGNvbnN0IGRpbWVuc2lvbk9yZGVyOiBNQlRJRGltZW5zaW9uW10gPSBbJ0UvSScsICdTL04nLCAnVC9GJywgJ0ovUCddXHJcbiAgICBjb25zdCBpbnRlcmltUmVzcG9uc2VzOiBRdWVzdGlvblJlc3BvbnNlW10gPSBbXVxyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgTWF0aC5taW4oNCwgcmVzcG9uc2VzLmxlbmd0aCk7IGkrKykge1xyXG4gICAgICBjb25zdCByZXNwb25zZSA9IHJlc3BvbnNlc1tpXVxyXG4gICAgICBpZiAoIXJlc3BvbnNlLm1idGlEaW1lbnNpb24gJiYgaSA8IGRpbWVuc2lvbk9yZGVyLmxlbmd0aCkge1xyXG4gICAgICAgIHJlc3BvbnNlLm1idGlEaW1lbnNpb24gPSBkaW1lbnNpb25PcmRlcltpXVxyXG4gICAgICB9XHJcbiAgICAgIGludGVyaW1SZXNwb25zZXMucHVzaChyZXNwb25zZSlcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhpcy5jYWxjdWxhdGVNQlRJKHtcclxuICAgICAgc2Vzc2lvbklkOiByZXNwb25zZXNbMF0/LnNlc3Npb25JZCB8fCAnJyxcclxuICAgICAgcmVzcG9uc2VzOiBpbnRlcmltUmVzcG9uc2VzLFxyXG4gICAgICBtZXRob2RvbG9neTogJ3NjZW5hcmlvcycsXHJcbiAgICAgIGlzSW50ZXJpbTogdHJ1ZSxcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgaXNTQUlTU2NvcmVWYWxpZChkaXN0cmlidXRpb25BOiBudW1iZXIsIGRpc3RyaWJ1dGlvbkI6IG51bWJlcik6IGJvb2xlYW4ge1xyXG4gICAgY29uc3QgdmFsaWRDb21iaW5hdGlvbnMgPSBbXHJcbiAgICAgIFs1LCAwXSwgWzQsIDFdLCBbMywgMl0sIFsyLCAzXSwgWzEsIDRdLCBbMCwgNV1cclxuICAgIF1cclxuICAgIFxyXG4gICAgcmV0dXJuIHZhbGlkQ29tYmluYXRpb25zLnNvbWUoXHJcbiAgICAgIChbYSwgYl0pID0+IGRpc3RyaWJ1dGlvbkEgPT09IGEgJiYgZGlzdHJpYnV0aW9uQiA9PT0gYlxyXG4gICAgKVxyXG4gIH1cclxuXHJcbiAgcHVibGljIHZhbGlkYXRlU0FJU0Rpc3RyaWJ1dGlvbihwb2ludEE6IG51bWJlciwgcG9pbnRCOiBudW1iZXIpOiBib29sZWFuIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIHBvaW50QSA+PSAwICYmIHBvaW50QSA8PSA1ICYmXHJcbiAgICAgIHBvaW50QiA+PSAwICYmIHBvaW50QiA8PSA1ICYmXHJcbiAgICAgIHBvaW50QSArIHBvaW50QiA9PT0gNSAmJlxyXG4gICAgICBOdW1iZXIuaXNJbnRlZ2VyKHBvaW50QSkgJiZcclxuICAgICAgTnVtYmVyLmlzSW50ZWdlcihwb2ludEIpXHJcbiAgICApXHJcbiAgfVxyXG5cclxuICAvLyBUZXN0IG1ldGhvZCBmb3IgU0FJUyBzY29yaW5nIHZlcmlmaWNhdGlvblxyXG4gIHB1YmxpYyB0ZXN0U0FJU1Njb3JpbmcocmVzcG9uc2VzOiBRdWVzdGlvblJlc3BvbnNlW10pOiB2b2lkIHtcclxuICAgIGNvbnNvbGUubG9nKCdTQUlTIFNjb3JpbmcgVGVzdDonKVxyXG4gICAgY29uc29sZS5sb2coJz09PT09PT09PT09PT09PT09PScpXHJcbiAgICBcclxuICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuY2FsY3VsYXRlTUJUSSh7XHJcbiAgICAgIHNlc3Npb25JZDogJ3Rlc3Qtc2Vzc2lvbicsXHJcbiAgICAgIHJlc3BvbnNlcyxcclxuICAgICAgbWV0aG9kb2xvZ3k6ICdzYWlzJyxcclxuICAgICAgaXNJbnRlcmltOiBmYWxzZSxcclxuICAgIH0pXHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKCdNQlRJIFR5cGU6JywgcmVzdWx0Lm1idGlUeXBlKVxyXG4gICAgY29uc29sZS5sb2coJ092ZXJhbGwgQ29uZmlkZW5jZTonLCByZXN1bHQub3ZlcmFsbENvbmZpZGVuY2UgKyAnJScpXHJcbiAgICBjb25zb2xlLmxvZygnXFxuRGltZW5zaW9uIEJyZWFrZG93bjonKVxyXG4gICAgXHJcbiAgICByZXN1bHQuZGltZW5zaW9uU2NvcmVzLmZvckVhY2goc2NvcmUgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhgJHtzY29yZS5kaW1lbnNpb259OiAke3Njb3JlLnByZWZlcmVuY2V9ICgke3Njb3JlLmNvbmZpZGVuY2V9JSBjb25maWRlbmNlKWApXHJcbiAgICAgIGNvbnNvbGUubG9nKGAgIFJhdyBzY29yZXM6IEE9JHtzY29yZS5yYXdTY29yZUF9LCBCPSR7c2NvcmUucmF3U2NvcmVCfWApXHJcbiAgICB9KVxyXG4gIH1cclxufSJdLCJuYW1lcyI6WyJNQlRJQ2FsY3VsYXRvclNlcnZpY2UiLCJnZXRJbnN0YW5jZSIsImluc3RhbmNlIiwiY2FsY3VsYXRlTUJUSSIsImlucHV0Iiwic2Vzc2lvbklkIiwicmVzcG9uc2VzIiwibWV0aG9kb2xvZ3kiLCJpc0ludGVyaW0iLCJkaW1lbnNpb25TY29yZXMiLCJjYWxjdWxhdGVEaW1lbnNpb25TY29yZXMiLCJtYnRpVHlwZSIsImRldGVybWluZU1CVElUeXBlIiwib3ZlcmFsbENvbmZpZGVuY2UiLCJjYWxjdWxhdGVPdmVyYWxsQ29uZmlkZW5jZSIsInRvdGFsUmVzcG9uc2VzIiwibGVuZ3RoIiwiZGltZW5zaW9ucyIsInNjb3JlcyIsImRpbWVuc2lvbiIsImRpbWVuc2lvblJlc3BvbnNlcyIsImZpbHRlciIsInIiLCJtYnRpRGltZW5zaW9uIiwicmF3U2NvcmVBIiwicmF3U2NvcmVCIiwicmVzcG9uc2UiLCJyZXNwb25zZVR5cGUiLCJwb2ludHNBIiwiZGlzdHJpYnV0aW9uQSIsInBvaW50c0IiLCJkaXN0cmlidXRpb25CIiwic2VsZWN0ZWRPcHRpb24iLCJwcmVmZXJlbmNlIiwiZGV0ZXJtaW5lUHJlZmVyZW5jZSIsImNvbmZpZGVuY2UiLCJjYWxjdWxhdGVDb25maWRlbmNlIiwicHVzaCIsInNjb3JlQSIsInNjb3JlQiIsInNhaXNSZXNwb25zZSIsImZpbmQiLCJ0ZW5kZW5jeSIsInRlbmRlbmN5Q291bnRzIiwid2VpZ2h0IiwicHJlZmVyZW5jZXMiLCJPYmplY3QiLCJlbnRyaWVzIiwic29ydCIsImEiLCJiIiwiZGltZW5zaW9uTWFwIiwiQSIsIkIiLCJ0b3RhbCIsImhpZ2hlciIsIk1hdGgiLCJtYXgiLCJkaWZmZXJlbmNlIiwiYWJzIiwibWF4UG9zc2libGVEaWZmZXJlbmNlIiwicm91bmQiLCJ0eXBlU3RyaW5nIiwibWFwIiwic2NvcmUiLCJqb2luIiwidG90YWxDb25maWRlbmNlIiwicmVkdWNlIiwic3VtIiwiY2FsY3VsYXRlSW50ZXJpbVJlc3VsdHMiLCJkaW1lbnNpb25PcmRlciIsImludGVyaW1SZXNwb25zZXMiLCJpIiwibWluIiwiaXNTQUlTU2NvcmVWYWxpZCIsInZhbGlkQ29tYmluYXRpb25zIiwic29tZSIsInZhbGlkYXRlU0FJU0Rpc3RyaWJ1dGlvbiIsInBvaW50QSIsInBvaW50QiIsIk51bWJlciIsImlzSW50ZWdlciIsInRlc3RTQUlTU2NvcmluZyIsImNvbnNvbGUiLCJsb2ciLCJyZXN1bHQiLCJmb3JFYWNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/services/MBTICalculatorService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&page=%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fassessment%2Fcalculate-interim%2Froute.ts&appDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();