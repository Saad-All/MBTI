"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/assessment/calculate-interim/route";
exports.ids = ["app/api/assessment/calculate-interim/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&page=%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fassessment%2Fcalculate-interim%2Froute.ts&appDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&page=%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fassessment%2Fcalculate-interim%2Froute.ts&appDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_am112_OneDrive_Clients_MBTI_src_app_api_assessment_calculate_interim_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/assessment/calculate-interim/route.ts */ \"(rsc)/./src/app/api/assessment/calculate-interim/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/assessment/calculate-interim/route\",\n        pathname: \"/api/assessment/calculate-interim\",\n        filename: \"route\",\n        bundlePath: \"app/api/assessment/calculate-interim/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\am112\\\\OneDrive\\\\سطح المكتب\\\\Clients\\\\MBTI\\\\src\\\\app\\\\api\\\\assessment\\\\calculate-interim\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_am112_OneDrive_Clients_MBTI_src_app_api_assessment_calculate_interim_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/assessment/calculate-interim/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhc3Nlc3NtZW50JTJGY2FsY3VsYXRlLWludGVyaW0lMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFzc2Vzc21lbnQlMkZjYWxjdWxhdGUtaW50ZXJpbSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFzc2Vzc21lbnQlMkZjYWxjdWxhdGUtaW50ZXJpbSUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNhbTExMiU1Q09uZURyaXZlJTVDJUQ4JUIzJUQ4JUI3JUQ4JUFEJTIwJUQ4JUE3JUQ5JTg0JUQ5JTg1JUQ5JTgzJUQ4JUFBJUQ4JUE4JTVDQ2xpZW50cyU1Q01CVEklNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q2FtMTEyJTVDT25lRHJpdmUlNUMlRDglQjMlRDglQjclRDglQUQlMjAlRDglQTclRDklODQlRDklODUlRDklODMlRDglQUElRDglQTglNUNDbGllbnRzJTVDTUJUSSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDNkQ7QUFDMUk7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYnRpLWNvYWNoaW5nLXBsYXRmb3JtLz9jZTgxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXGFtMTEyXFxcXE9uZURyaXZlXFxcXNiz2LfYrSDYp9mE2YXZg9iq2KhcXFxcQ2xpZW50c1xcXFxNQlRJXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXGFzc2Vzc21lbnRcXFxcY2FsY3VsYXRlLWludGVyaW1cXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2Fzc2Vzc21lbnQvY2FsY3VsYXRlLWludGVyaW0vcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hc3Nlc3NtZW50L2NhbGN1bGF0ZS1pbnRlcmltXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9hc3Nlc3NtZW50L2NhbGN1bGF0ZS1pbnRlcmltL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcYW0xMTJcXFxcT25lRHJpdmVcXFxc2LPYt9itINin2YTZhdmD2KrYqFxcXFxDbGllbnRzXFxcXE1CVElcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcYXNzZXNzbWVudFxcXFxjYWxjdWxhdGUtaW50ZXJpbVxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYXNzZXNzbWVudC9jYWxjdWxhdGUtaW50ZXJpbS9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&page=%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fassessment%2Fcalculate-interim%2Froute.ts&appDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/assessment/calculate-interim/route.ts":
/*!***********************************************************!*\
  !*** ./src/app/api/assessment/calculate-interim/route.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_services_MBTICalculatorService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/services/MBTICalculatorService */ \"(rsc)/./src/lib/services/MBTICalculatorService.ts\");\n\n\nasync function POST(request) {\n    const interimApiEnabled = process.env.NEXT_PUBLIC_INTERIM_API_ENABLED !== \"false\";\n    if (!interimApiEnabled) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Interim results temporarily unavailable\",\n            fallback: true,\n            redirect: \"/api/assessment/calculate\"\n        }, {\n            status: 503\n        });\n    }\n    try {\n        const body = await request.json();\n        const { sessionId, responses } = body;\n        if (!sessionId || !responses || !Array.isArray(responses)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid request data. SessionId and responses array required.\"\n            }, {\n                status: 400\n            });\n        }\n        // Filter only core responses and validate count\n        const coreResponses = responses.filter((r)=>r.questionType === \"core\");\n        if (coreResponses.length !== 4) {\n            console.error(`Interim API: Expected 4 core responses, got ${coreResponses.length}. Total responses: ${responses.length}`);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: `Invalid core responses count. Expected 4, got ${coreResponses.length}`,\n                debug: {\n                    totalResponses: responses.length,\n                    coreResponses: coreResponses.length,\n                    responseTypes: responses.map((r)=>r.questionType)\n                }\n            }, {\n                status: 400\n            });\n        }\n        const calculator = _lib_services_MBTICalculatorService__WEBPACK_IMPORTED_MODULE_1__.MBTICalculatorService.getInstance();\n        const interimResult = calculator.calculateInterimResults(coreResponses);\n        const insights = generateInterimInsights(interimResult.mbtiType, interimResult.dimensionScores, body.language || \"en\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            interimResult: {\n                ...interimResult,\n                confidence: Math.min(interimResult.overallConfidence, 65),\n                insights,\n                disclaimer: getDisclaimer(body.language || \"en\")\n            }\n        });\n    } catch (error) {\n        console.error(\"Interim calculation error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to calculate interim results\"\n        }, {\n            status: 500\n        });\n    }\n}\nfunction generateInterimInsights(mbtiType, dimensionScores, language) {\n    const insights = [];\n    const isArabic = language === \"ar\";\n    // Insight based on E/I dimension\n    const eiScore = dimensionScores.find((d)=>d.dimension === \"E/I\");\n    if (eiScore) {\n        if (eiScore.preference === \"E\") {\n            insights.push(isArabic ? \"يبدو أنك تستمد طاقتك من التفاعل مع الآخرين والعالم الخارجي\" : \"You appear to draw energy from interacting with others and the external world\");\n        } else {\n            insights.push(isArabic ? \"يبدو أنك تفضل التفكير الداخلي والتأمل للحصول على الطاقة\" : \"You seem to prefer inner reflection and introspection for energy\");\n        }\n    }\n    // Insight based on S/N dimension\n    const snScore = dimensionScores.find((d)=>d.dimension === \"S/N\");\n    if (snScore) {\n        if (snScore.preference === \"S\") {\n            insights.push(isArabic ? \"تميل إلى التركيز على التفاصيل الملموسة والحقائق الواقعية\" : \"You tend to focus on concrete details and practical realities\");\n        } else {\n            insights.push(isArabic ? \"تميل إلى رؤية الصورة الكبيرة والاحتمالات المستقبلية\" : \"You tend to see the big picture and future possibilities\");\n        }\n    }\n    // Insight based on T/F dimension\n    const tfScore = dimensionScores.find((d)=>d.dimension === \"T/F\");\n    if (tfScore) {\n        if (tfScore.preference === \"T\") {\n            insights.push(isArabic ? \"تفضل اتخاذ القرارات بناءً على المنطق والتحليل الموضوعي\" : \"You prefer making decisions based on logic and objective analysis\");\n        } else {\n            insights.push(isArabic ? \"تأخذ في الاعتبار القيم الشخصية وتأثير القرارات على الآخرين\" : \"You consider personal values and the impact of decisions on others\");\n        }\n    }\n    return insights.slice(0, 3) // Return maximum 3 insights\n    ;\n}\nfunction getDisclaimer(language) {\n    return language === \"ar\" ? \"هذه نتائج أولية بناءً على 4 أسئلة فقط. ستصبح النتائج أكثر دقة بعد إكمال الأسئلة الإضافية.\" : \"These are preliminary results based on only 4 questions. Results will become more accurate after completing additional questions.\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/assessment/calculate-interim/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/services/MBTICalculatorService.ts":
/*!***************************************************!*\
  !*** ./src/lib/services/MBTICalculatorService.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MBTICalculatorService: () => (/* binding */ MBTICalculatorService)\n/* harmony export */ });\nclass MBTICalculatorService {\n    constructor(){\n        // SAIS Consciousness Domain Mapping (Arabic)\n        this.consciousnessDomains = {\n            \"E/I\": {\n                name: \"مصدر حيويتك وتفاعلك\",\n                E: {\n                    name: \"التفاعل الخارجي\",\n                    description: \"استمداد الحيوية من التفاعل مع الطيف الواسع من النشاطات والأشخاص\"\n                },\n                I: {\n                    name: \"الانغماس الداخلي\",\n                    description: \"الانغماس في عالمك الداخلي الغني والاتصال بمركز جذري عميق وهادئ\"\n                }\n            },\n            \"S/N\": {\n                name: \"طريقة استقبالك للمعلومات\",\n                S: {\n                    name: \"الواقع المادي\",\n                    description: \"التفاعل مع الواقع المادي الملموس واستخدام الحواس الخمس\"\n                },\n                N: {\n                    name: \"البصيرة الحدسية\",\n                    description: \"الغوص في بحر الاحتمالات والمعاني الخفية باستخدام العين الثالثة\"\n                }\n            },\n            \"T/F\": {\n                name: \"مركز اتخاذ القرار\",\n                T: {\n                    name: \"التحليل المنطقي\",\n                    description: \"تحليل منطقي وموضوعي للحقائق وبناء هيكل عقلي متماسك\"\n                },\n                F: {\n                    name: \"بوصلة القيم الداخلية\",\n                    description: \"الاتصال بمركز القلب والانسجام مع مشاعر الآخرين وقيمك الداخلية\"\n                }\n            },\n            \"J/P\": {\n                name: \"تنظيم عالمك الخارجي\",\n                J: {\n                    name: \"الهيكل المنظم\",\n                    description: \"وضع هيكل زمني ونظام واضح للسيطرة والتنبؤ بالأحداث\"\n                },\n                P: {\n                    name: \"المرونة العفوية\",\n                    description: \"ترك مساحة للمرونة والعفوية وإبقاء الخيارات مفتوحة\"\n                }\n            }\n        };\n    }\n    static getInstance() {\n        if (!MBTICalculatorService.instance) {\n            MBTICalculatorService.instance = new MBTICalculatorService();\n        }\n        return MBTICalculatorService.instance;\n    }\n    calculateMBTI(input) {\n        const { sessionId, responses, methodology, isInterim = false } = input;\n        const dimensionScores = this.calculateDimensionScores(responses, methodology);\n        const mbtiType = this.determineMBTIType(dimensionScores);\n        const overallConfidence = this.calculateOverallConfidence(dimensionScores);\n        // Generate consciousness profile for SAIS methodology\n        let consciousnessProfile = undefined;\n        if (methodology === \"sais\") {\n            consciousnessProfile = this.generateConsciousnessProfile(dimensionScores);\n        }\n        return {\n            sessionId,\n            mbtiType,\n            dimensionScores,\n            overallConfidence,\n            methodology,\n            isInterim,\n            totalResponses: responses.length,\n            consciousnessProfile\n        };\n    }\n    calculateDimensionScores(responses, methodology) {\n        const dimensions = [\n            \"E/I\",\n            \"S/N\",\n            \"T/F\",\n            \"J/P\"\n        ];\n        const scores = [];\n        for (const dimension of dimensions){\n            const dimensionResponses = responses.filter((r)=>r.mbtiDimension === dimension);\n            let rawScoreA = 0;\n            let rawScoreB = 0;\n            for (const response of dimensionResponses){\n                if (methodology === \"sais\" && response.responseType === \"distribution\") {\n                    // For SAIS, we need to consider the tendency mapping\n                    // The distribution points represent strength of preference\n                    const pointsA = response.distributionA || 0;\n                    const pointsB = response.distributionB || 0;\n                    rawScoreA += pointsA;\n                    rawScoreB += pointsB;\n                } else if (response.responseType === \"binary\") {\n                    if (response.selectedOption === \"A\") {\n                        rawScoreA += 1;\n                    } else if (response.selectedOption === \"B\") {\n                        rawScoreB += 1;\n                    }\n                }\n            }\n            const preference = this.determinePreference(dimension, rawScoreA, rawScoreB, dimensionResponses);\n            const confidence = this.calculateConfidence(rawScoreA, rawScoreB, methodology);\n            // SAIS consciousness enhancements\n            let consciousnessPercentage = undefined;\n            let consciousnessDomain = undefined;\n            let totalPossiblePoints = undefined;\n            if (methodology === \"sais\") {\n                totalPossiblePoints = 15 // 3 questions × 5 points per question\n                ;\n                // For SAIS, rawScoreA and rawScoreB already contain the actual distribution points\n                // The preference was determined based on which score is higher\n                const winningScore = preference === dimension.split(\"/\")[0] ? rawScoreA : rawScoreB;\n                consciousnessPercentage = Math.round(winningScore / totalPossiblePoints * 100);\n                consciousnessDomain = this.consciousnessDomains[dimension].name;\n            }\n            scores.push({\n                dimension,\n                rawScoreA,\n                rawScoreB,\n                preference,\n                confidence,\n                consciousnessPercentage,\n                consciousnessDomain,\n                totalPossiblePoints\n            });\n        }\n        return scores;\n    }\n    determinePreference(dimension, scoreA, scoreB, dimensionResponses) {\n        // For SAIS, we need to check the tendency mapping from the responses\n        if (dimensionResponses && dimensionResponses.length > 0) {\n            const saisResponse = dimensionResponses.find((r)=>r.responseType === \"distribution\");\n            if (saisResponse && saisResponse.tendency) {\n                // If we have SAIS responses, use the tendency directly from the response\n                // which was determined based on the question's optionATendency/optionBTendency\n                const tendencyCounts = {};\n                for (const response of dimensionResponses){\n                    if (response.tendency) {\n                        if (!tendencyCounts[response.tendency]) {\n                            tendencyCounts[response.tendency] = 0;\n                        }\n                        // Weight by distribution points for SAIS\n                        if (response.responseType === \"distribution\") {\n                            const weight = response.selectedOption === \"A\" ? response.distributionA || 0 : response.distributionB || 0;\n                            tendencyCounts[response.tendency] += weight;\n                        } else {\n                            tendencyCounts[response.tendency] += 1;\n                        }\n                    }\n                }\n                // Return the tendency with the highest count\n                const preferences = Object.entries(tendencyCounts);\n                if (preferences.length > 0) {\n                    preferences.sort((a, b)=>b[1] - a[1]);\n                    return preferences[0][0];\n                }\n            }\n        }\n        // Fallback to standard mapping for non-SAIS or if tendencies not found\n        const dimensionMap = {\n            \"E/I\": {\n                A: \"E\",\n                B: \"I\"\n            },\n            \"S/N\": {\n                A: \"S\",\n                B: \"N\"\n            },\n            \"T/F\": {\n                A: \"T\",\n                B: \"F\"\n            },\n            \"J/P\": {\n                A: \"J\",\n                B: \"P\"\n            }\n        };\n        return scoreA > scoreB ? dimensionMap[dimension].A : dimensionMap[dimension].B;\n    }\n    calculateConfidence(scoreA, scoreB, methodology) {\n        const total = scoreA + scoreB;\n        if (total === 0) return 50;\n        const higher = Math.max(scoreA, scoreB);\n        let confidence = higher / total * 100;\n        // For SAIS methodology, apply a different confidence scale\n        // since the 5-point distribution allows for more nuanced responses\n        if (methodology === \"sais\") {\n            // SAIS confidence scale:\n            // 5-0 distribution = 100% confidence\n            // 4-1 distribution = 80% confidence  \n            // 3-2 distribution = 60% confidence\n            const difference = Math.abs(scoreA - scoreB);\n            const maxPossibleDifference = total;\n            if (maxPossibleDifference > 0) {\n                // Scale confidence based on the strength of the preference\n                confidence = 50 + difference / maxPossibleDifference * 50;\n            }\n        }\n        return Math.round(confidence);\n    }\n    determineMBTIType(dimensionScores) {\n        const typeString = dimensionScores.map((score)=>score.preference).join(\"\");\n        return typeString;\n    }\n    calculateOverallConfidence(dimensionScores) {\n        const totalConfidence = dimensionScores.reduce((sum, score)=>sum + score.confidence, 0);\n        return Math.round(totalConfidence / dimensionScores.length);\n    }\n    calculateInterimResults(responses) {\n        const dimensionOrder = [\n            \"E/I\",\n            \"S/N\",\n            \"T/F\",\n            \"J/P\"\n        ];\n        const interimResponses = [];\n        for(let i = 0; i < Math.min(4, responses.length); i++){\n            const response = responses[i];\n            if (!response.mbtiDimension && i < dimensionOrder.length) {\n                response.mbtiDimension = dimensionOrder[i];\n            }\n            interimResponses.push(response);\n        }\n        return this.calculateMBTI({\n            sessionId: responses[0]?.sessionId || \"\",\n            responses: interimResponses,\n            methodology: \"scenarios\",\n            isInterim: true\n        });\n    }\n    isSAISScoreValid(distributionA, distributionB) {\n        const validCombinations = [\n            [\n                5,\n                0\n            ],\n            [\n                4,\n                1\n            ],\n            [\n                3,\n                2\n            ],\n            [\n                2,\n                3\n            ],\n            [\n                1,\n                4\n            ],\n            [\n                0,\n                5\n            ]\n        ];\n        return validCombinations.some(([a, b])=>distributionA === a && distributionB === b);\n    }\n    validateSAISDistribution(pointA, pointB) {\n        return pointA >= 0 && pointA <= 5 && pointB >= 0 && pointB <= 5 && pointA + pointB === 5 && Number.isInteger(pointA) && Number.isInteger(pointB);\n    }\n    // SAIS Consciousness Profile Generation\n    generateConsciousnessProfile(dimensionScores) {\n        const getConsciousnessDimension = (dimension)=>{\n            const score = dimensionScores.find((s)=>s.dimension === dimension);\n            const domainData = this.consciousnessDomains[dimension];\n            // Safely access preference data with type checking\n            const preferenceKey = score.preference;\n            const preferenceData = domainData[preferenceKey];\n            if (!preferenceData) {\n                console.warn(`No preference data found for ${dimension}:${score.preference}`);\n                return {\n                    dimension,\n                    preference: score.preference,\n                    percentage: score.consciousnessPercentage || 0,\n                    arabicDomainName: score.preference,\n                    consciousnessDescription: \"وصف غير متاح\"\n                };\n            }\n            return {\n                dimension,\n                preference: score.preference,\n                percentage: score.consciousnessPercentage || 0,\n                arabicDomainName: preferenceData.name,\n                consciousnessDescription: preferenceData.description\n            };\n        };\n        return {\n            energySourcePattern: getConsciousnessDimension(\"E/I\"),\n            awarenessStyle: getConsciousnessDimension(\"S/N\"),\n            decisionMakingCenter: getConsciousnessDimension(\"T/F\"),\n            lifeStructurePreference: getConsciousnessDimension(\"J/P\")\n        };\n    }\n    // Test method for SAIS scoring verification\n    testSAISScoring(responses) {\n        console.log(\"SAIS Scoring Test:\");\n        console.log(\"==================\");\n        const result = this.calculateMBTI({\n            sessionId: \"test-session\",\n            responses,\n            methodology: \"sais\",\n            isInterim: false\n        });\n        console.log(\"MBTI Type:\", result.mbtiType);\n        console.log(\"Overall Confidence:\", result.overallConfidence + \"%\");\n        console.log(\"\\nDimension Breakdown:\");\n        result.dimensionScores.forEach((score)=>{\n            console.log(`${score.dimension}: ${score.preference} (${score.confidence}% confidence)`);\n            console.log(`  Raw scores: A=${score.rawScoreA}, B=${score.rawScoreB}`);\n            if (score.consciousnessPercentage) {\n                console.log(`  Consciousness: ${score.consciousnessPercentage}% - ${score.consciousnessDomain}`);\n            }\n        });\n        // Display consciousness profile\n        if (result.consciousnessProfile) {\n            console.log(\"\\nConsciousness Profile:\");\n            console.log(\"Energy Source:\", result.consciousnessProfile.energySourcePattern.arabicDomainName, `(${result.consciousnessProfile.energySourcePattern.percentage}%)`);\n            console.log(\"Awareness Style:\", result.consciousnessProfile.awarenessStyle.arabicDomainName, `(${result.consciousnessProfile.awarenessStyle.percentage}%)`);\n            console.log(\"Decision Center:\", result.consciousnessProfile.decisionMakingCenter.arabicDomainName, `(${result.consciousnessProfile.decisionMakingCenter.percentage}%)`);\n            console.log(\"Life Structure:\", result.consciousnessProfile.lifeStructurePreference.arabicDomainName, `(${result.consciousnessProfile.lifeStructurePreference.percentage}%)`);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/services/MBTICalculatorService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&page=%2Fapi%2Fassessment%2Fcalculate-interim%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fassessment%2Fcalculate-interim%2Froute.ts&appDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cam112%5COneDrive%5C%D8%B3%D8%B7%D8%AD%20%D8%A7%D9%84%D9%85%D9%83%D8%AA%D8%A8%5CClients%5CMBTI&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();