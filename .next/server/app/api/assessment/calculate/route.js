"use strict";(()=>{var e={};e.id=56,e.ids=[56],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3350:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>g,patchFetch:()=>f,requestAsyncStorage:()=>m,routeModule:()=>I,serverHooks:()=>h,staticGenerationAsyncStorage:()=>S});var i={};s.r(i),s.d(i,{OPTIONS:()=>p,POST:()=>c});var n=s(9303),r=s(8716),o=s(670),a=s(7070),u=s(1483);class l{constructor(){}static getInstance(){return l.instance||(l.instance=new l),l.instance}validateResponses(e,t){let s=[];if(!e||0===e.length)return s.push({field:"responses",message:"No responses provided",code:"EMPTY_RESPONSES"}),{isValid:!1,errors:s};for(let i=0;i<e.length;i++){let n=e[i],r=this.validateSingleResponse(n,t,i);s.push(...r)}if("sais"===t){let t=this.validateSAISDistributions(e);s.push(...t)}return{isValid:0===s.length,errors:s}}validateSingleResponse(e,t,s){let i=[],n=`responses[${s}]`;return e.questionId||i.push({field:`${n}.questionId`,message:"Question ID is required",code:"MISSING_QUESTION_ID"}),e.sessionId||i.push({field:`${n}.sessionId`,message:"Session ID is required",code:"MISSING_SESSION_ID"}),e.mbtiDimension?this.isValidDimension(e.mbtiDimension)||i.push({field:`${n}.mbtiDimension`,message:"Invalid MBTI dimension",code:"INVALID_DIMENSION"}):i.push({field:`${n}.mbtiDimension`,message:"MBTI dimension is required",code:"MISSING_DIMENSION"}),e.responseType||i.push({field:`${n}.responseType`,message:"Response type is required",code:"MISSING_RESPONSE_TYPE"}),"binary"===e.responseType?e.selectedOption&&["A","B"].includes(e.selectedOption)||i.push({field:`${n}.selectedOption`,message:"Binary response must have selectedOption as A or B",code:"INVALID_BINARY_OPTION"}):"distribution"===e.responseType&&(void 0===e.distributionA||void 0===e.distributionB)&&i.push({field:`${n}.distribution`,message:"Distribution responses must have both distributionA and distributionB",code:"MISSING_DISTRIBUTION"}),i}validateSAISDistributions(e){let t=[],s={};for(let i of e)if("distribution"===i.responseType){let e=(i.distributionA||0)+(i.distributionB||0);s[i.questionId]=e,5!==e&&t.push({field:`question-${i.questionId}`,message:`SAIS distribution must total exactly 5, got ${e}`,code:"INVALID_SAIS_TOTAL"}),this.isValidSAISCombination(i.distributionA||0,i.distributionB||0)||t.push({field:`question-${i.questionId}`,message:`Invalid SAIS distribution combination: ${i.distributionA}/${i.distributionB}`,code:"INVALID_SAIS_COMBINATION"})}return t}isValidSAISCombination(e,t){return[[5,0],[4,1],[3,2],[2,3],[1,4],[0,5]].some(([s,i])=>e===s&&t===i)}isValidDimension(e){return["E/I","S/N","T/F","J/P"].includes(e)}validateSAISResponses(e){let t=this.validateResponses(e,"sais"),s={};for(let t of e)"distribution"===t.responseType&&(s[t.questionId]=(t.distributionA||0)+(t.distributionB||0));return{...t,distributionTotals:s}}validateMethodology(e){return["scenarios","traits","sais"].includes(e)}sanitizeResponses(e){return e.map(e=>({...e,questionId:e.questionId?.toString()||"",sessionId:e.sessionId?.toString()||"",responseId:e.responseId?.toString()||"",distributionA:"number"==typeof e.distributionA?Math.max(0,Math.min(5,e.distributionA)):void 0,distributionB:"number"==typeof e.distributionB?Math.max(0,Math.min(5,e.distributionB)):void 0}))}}let d=new Map;async function c(e){try{let{sessionId:t,responses:s,methodology:i,isInterim:n}=await e.json();if(!t)return a.NextResponse.json({success:!1,error:"Session ID is required",timestamp:new Date().toISOString()},{status:400});if(!s||!Array.isArray(s))return a.NextResponse.json({success:!1,error:"Responses array is required",timestamp:new Date().toISOString()},{status:400});if(!i)return a.NextResponse.json({success:!1,error:"Methodology is required",timestamp:new Date().toISOString()},{status:400});let r=l.getInstance();if(!r.validateMethodology(i))return a.NextResponse.json({success:!1,error:"Invalid methodology. Must be one of: scenarios, traits, sais",timestamp:new Date().toISOString()},{status:400});let o=`${t}-${i}-${s.length}-${JSON.stringify(s)}`,c=d.get(o);if(c&&Date.now()-c.timestamp<3e5){let e={...c.result,cacheHit:!0};return a.NextResponse.json({success:!0,data:e,timestamp:new Date().toISOString()})}let p=r.sanitizeResponses(s),I=r.validateResponses(p,i);if(!I.isValid)return a.NextResponse.json({success:!1,error:"Invalid responses",data:{errors:I.errors},timestamp:new Date().toISOString()},{status:400});let m={...u.p.getInstance().calculateMBTI({sessionId:t,responses:p,methodology:i,isInterim:n||!1}),calculatedAt:new Date,cacheHit:!1};d.set(o,{result:m,timestamp:Date.now()});let S=[];for(let e of(d.forEach((e,t)=>{Date.now()-e.timestamp>3e5&&S.push(t)}),S))d.delete(e);return a.NextResponse.json({success:!0,data:m,timestamp:new Date().toISOString()})}catch(e){return console.error("MBTI calculation error:",e),a.NextResponse.json({success:!1,error:"Internal server error during MBTI calculation",timestamp:new Date().toISOString()},{status:500})}}async function p(e){return new a.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}let I=new n.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/assessment/calculate/route",pathname:"/api/assessment/calculate",filename:"route",bundlePath:"app/api/assessment/calculate/route"},resolvedPagePath:"C:\\Users\\am112\\OneDrive\\سطح المكتب\\Clients\\MBTI\\src\\app\\api\\assessment\\calculate\\route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:m,staticGenerationAsyncStorage:S,serverHooks:h}=I,g="/api/assessment/calculate/route";function f(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:S})}},1483:(e,t,s)=>{s.d(t,{p:()=>i});class i{constructor(){}static getInstance(){return i.instance||(i.instance=new i),i.instance}calculateMBTI(e){let{sessionId:t,responses:s,methodology:i,isInterim:n=!1}=e,r=this.calculateDimensionScores(s,i),o=this.determineMBTIType(r),a=this.calculateOverallConfidence(r);return{sessionId:t,mbtiType:o,dimensionScores:r,overallConfidence:a,methodology:i,isInterim:n,totalResponses:s.length}}calculateDimensionScores(e,t){let s=[];for(let i of["E/I","S/N","T/F","J/P"]){let n=e.filter(e=>e.mbtiDimension===i),r=0,o=0;for(let e of n)"sais"===t&&"distribution"===e.responseType?(r+=e.distributionA||0,o+=e.distributionB||0):"binary"===e.responseType&&("A"===e.selectedOption?r+=1:"B"===e.selectedOption&&(o+=1));let a=this.determinePreference(i,r,o),u=this.calculateConfidence(r,o);s.push({dimension:i,rawScoreA:r,rawScoreB:o,preference:a,confidence:u})}return s}determinePreference(e,t,s){let i={"E/I":{A:"E",B:"I"},"S/N":{A:"S",B:"N"},"T/F":{A:"T",B:"F"},"J/P":{A:"J",B:"P"}};return t>s?i[e].A:i[e].B}calculateConfidence(e,t){let s=e+t;return 0===s?50:Math.round(Math.max(e,t)/s*100)}determineMBTIType(e){return e.map(e=>e.preference).join("")}calculateOverallConfidence(e){return Math.round(e.reduce((e,t)=>e+t.confidence,0)/e.length)}calculateInterimResults(e){let t=["E/I","S/N","T/F","J/P"],s=[];for(let i=0;i<Math.min(4,e.length);i++){let n=e[i];!n.mbtiDimension&&i<t.length&&(n.mbtiDimension=t[i]),s.push(n)}return this.calculateMBTI({sessionId:e[0]?.sessionId||"",responses:s,methodology:"scenarios",isInterim:!0})}isSAISScoreValid(e,t){return[[5,0],[4,1],[3,2],[2,3],[1,4],[0,5]].some(([s,i])=>e===s&&t===i)}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),i=t.X(0,[276,972],()=>s(3350));module.exports=i})();